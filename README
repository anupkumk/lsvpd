lsvpd:
-----
The lsvpd package contains all of the lsvpd, lscfg and lsmcode commands.
These commands, along with a scanning program called vpdupdate, constitute
a hardware inventory system. The lsvpd command provides Vital Product Data
(VPD) about hardware components to higher-level serviceability tools. The
lscfg command provides a more human-readable format of the VPD, as well as
some system-specific information. lsmcode lists microcode and firmware
levels. lsvio lists virtual devices.

Source:
-------
https://github.com/power-ras/lsvpd

License:
--------
See 'COPYING' file.

Compilation dependencies:
-------------------------
- C and C++ compiler (gcc, g++)
- GNU build tools (automake, autoconf, libtool, etc)
- librtas-devel
- libvpd-devel
- sg3_utils-devel
- zlib-devel

Binary dependencies:
--------------------
- iprutils
- librtas
- libvpd
- sg3_utils
- zlib

Note:
  Package name may differ slightly between Linux distributors. Ex: RedHat and
  SLES ships development packages as "-devel" while Ubuntu ships it as "-dev"
  package. Please check your linux distribution package naming convention and
  make sure you have installed right packages.

Building:
---------
You can build on Power Linux System.

$ ./bootstrap.sh
$ ./configure [--prefix=/usr/]
$ make
$ make install

Building rpms:
--------------
To build a tarball to feed to rpmbuild, do

$ make dist-gzip

As an example, we use a command similar to the following:

$ rpmbuild -ba [--target=ppc/ppc64] <path-to-spec-file>

Reporting issue:
----------------
Create a GitHub issue if you have any request for change, assuming one does
not already exist. Clearly describe the issue including steps to reproduce
if it is a bug.

How to contribute:
------------------
If you plan to submit the changes, submit a pull request based on top of
master. Include a descriptive commit message. Changes contributed should
focus on a single issue at a time to the extent possible.

Hacking:
--------
The following workflow should work for you:
- Fork the repository on GitHub into your account.
- Create a topic branch from where you want to base your work.
  This is usually the master branch.
- Make sure you have added the necessary tests for your changes and make sure
  all tests pass.
- Push your changes to the topic branch in your fork of the repository.
- Include a descriptive commit message, and each commit should have
  linux-kernel style 'Signed-Off-By'.
- Submit a pull request to this repository.

You probably want to read the linux kernel Documentation/SubmittingPatches
as much of it applies to lsvpd.

--
